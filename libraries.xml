<?xml version="1.0" encoding="iso-8859-1" ?>
<!DOCTYPE chapter SYSTEM "chapter.dtd">
<chapter>
  <header>
    <title>Erlang Libraries</title>
    <prepared>Matthias Lang</prepared>
<docno></docno>
<date>2007-09-12</date>
    <rev>1.0</rev>
    <file>libraries.xml</file>
  </header>

<section><title> What's in the OTP libraries?</title>
<p>
	The full library descriptions are included with the open-source
	distribution and also
	<url href="http://www.erlang.org/doc/">
	on line</url>. The highlights are:
</p>

	<section>
	<title>O&amp;M Support</title>
        <p>
		SASL, EVA, INETS and SNMP provide
		Operations- and maintenance-related functionality:
		release handling, alarm and event handling,
		administration via web browser and SNMP.
        </p>

	</section><section>
	<title>CORBA</title>
        <p>
		ORBER, CosEvent, CosTransactions and IC
		contain support for everything CORBA related.
        </p>
	</section><section>
	<title>Database</title>
        <p>
		Mnesia and Mnemosyne provide a real-time distributed
		database which can be both in-RAM and on-disk.
		There is also a standard ODBC client driver.
        </p>
	</section><section>
	<title>ASN.1</title>
        <p>
		There is an ASN.1 compiler which produces Erlang code.
        </p>
	</section><section>
	<title>Standard Library</title>
        <p>
		A rich collection of modules provides
		everything from string, list and regular expression
		manipulation to	random number generation and calendar
		lookups.
        </p>
	</section><section>
	<title>Structural Components</title>
	<p>
		gen_server, gen_fsm,
		and supervision trees provide standard ways of implementing
		client/server subsystems, state machines and
		supervised fault-tolerant systems.
        </p>
	</section><section>
	<title>GUI and Graphics</title>
	<p>
		wx, gs and webtool provide ways to build a gui.
        </p>
	</section>

<p>
	Among other things, there are also HTTP, SSH and FTP servers.

</p></section>
<section><title> Is there a collection of data structures, e.g. balanced trees?</title>
<p>
	Linked lists are a fundamental part of Erlang, as are tuples.
	The other standard data structures are:
	</p>

	<table>
	<row><cell>Module</cell><cell>Description</cell></row>
	<row><cell>sets</cell>
              <cell>sets, i.e. a collection of unique elements.</cell>
        </row>
	<row><cell>gb_sets</cell>
              <cell>sets, but based on a general balanced data structure</cell>
        </row>
	<row><cell>gb_tree</cell>
              <cell>a general balanced tree</cell>
        </row>
	<row><cell>dict</cell>
              <cell>maps, also called associative arrays</cell>
        </row>
	<row><cell>ets</cell>
              <cell>hash tables and ordered sets (trees), stored outside the process</cell>
        </row>
	<row><cell>dets</cell>
              <cell>on-disk hash tables</cell>
        </row>
        <tcaption>Standard data structures</tcaption>
	</table>
	
<p>

	The <url href="http://www.erlang.org/user.html">
	contributions area</url>
	at the erlang.org site includes	modules for
	double-ended queues and balanced trees.
	</p>

        <p>
	(Beware: the less frequently used modules <c>ordset</c> and
	<c>orddict</c> are merely ordered lists, and thus have O(n)
	for common operations such as insert.)

</p></section>
<section><title>Is there a serial port driver for Erlang?</title>
<p>
	Johan Bevemyr wrote one which works for unix machines. The
	code is freely available at
	<url href="http://www.erlang.org/user.html"> the contributions
	area</url> as <em>serial-1.0</em>.
	</p><p>

	There have been discussions on the mailing list about writing
	a more general driver which also works on windows machines.
	Nothing much has come of this (lack of interest?).

</p></section>
<section><title>Is there a toolkit for building GUIs?</title>
<p>

	There are several.
</p><p>

	The <url
	href="http://www.erlang.org/doc/apps/wx/">wx</url>
	application lets you make GUIs with
	<url href="http://www.wxwidgets.org">wxWidgets</url>, a
	cross-platform toolkit. wx is part of the OTP
	distribution.
        The deprecated <url
	href="http://www.erlang.org/doc/apps/gs">gs</url> application
	uses <url href="http://www.tcl.tk">tk</url> as a backend.
</p><p>

        For those who like <url href="http://glade.gnome.org">glade</url>,
        the <url href="http://www.gtk.org">GTK</url>
        interface builder, there's a
        <url href="https://github.com/massemanet/gtknode">binding</url>
        to GTK which is tightly coupled to glade. For the bare-metal
        types, there's some <url ref="http://www.sics.se/~joe/ex11/">
        interesting work</url> to directly access the X protocol.  
</p><p>

        <url href=
        "http://www.erlang.org/documentation/doc-5.0.1/lib/etk-0.9.3/doc">
	etk</url>, a fairly direct binding to tk, seems to have been
        abandoned around 1999, while
        <url href="http://sourceforge.net/projects/erlgtk/">erlgtk</url>,
        another binding to GTK, hasn't received much love since 2009.
</p><p>

	Related work includes a popular
        <url href="http://www.wings3d.com/">OpenGL modeller</url>, and a
        <url href="https://github.com/nox/gd1_drv">
	binding to GD</url>, which is useful for dynamically creating
	JPEG and PNG images.
</p><p>

</p></section>
<section><title>I've written a library to handle XYZ. How do I get it into the standard Erlang distribution?</title>
<p>

        This takes more work and patience than most people
        have. Kent Boortz described many of the hurdles
        <url href="http://erlang.org/pipermail/erlang-questions/2004-May/012329.html">on the mailing list</url>.
</p><p>
        There are other ways to spread your code, including
        distributing it from your own website or adding it to
        the <url href="http://jungerl.sourceforge.net/">jungerl</url>.

</p>
</section>
</chapter>
